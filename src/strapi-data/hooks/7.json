{
	"id": "627cd97398497201a5000410",
	"title": "Polus_Request_ViewUpdate",
	"hookType": "viewUpdate",
	"function": "function viewUpdate(props) {\n  const { user, item, form, isCreation = false } = props;\n  const formInstance = item;\n  //console.warn(\"formInstance\", formInstance.data?.selectTab);\n  const formCopy = Object.assign(\n    Object.create(Object.getPrototypeOf(form)),\n    form\n  );\n\n  const isOwner = formInstance.owner === user.id;\n  const isReviewer = formInstance.reviewers\n    ? formInstance.reviewers.some((rev) => rev === user.id)\n    : false;\n  \n  const requestStatus_draft = \"draft\";\n  const requestStatus_review = \"review\";\n  const requestStatus_confirmed = \"confirmed\";\n  const requestStatus_rejected = \"rejected\";\n  const requestStatus_accepted = \"accepted\";\n  const requestStatus_notAccepted = \"notAccepted\";\n  \n  const descFields = [\n    \"dateTimeDuration\",\n    \"areaObject\",\n    \"actAndTypeOfWorkObject\",\n    \"attachmentsAndComment\"\n  ];\n\n  const creationFields = [\n    \"numberObject\",\n    \"dateTimeDuration\",\n    \"areaObject\",\n    \"actAndTypeOfWorkObject\",\n    \"subcontractor\",\n    \"customerRepresentative\",\n    \"representativeDesignerSupervisor\",\n    \"attachmentsAndComment\",\n    \"selectTest\"\n  ];\n\n  const inspectionFields = [\"subcontractor\",\"customerRepresentative\",\"representativeDesignerSupervisor\"];\n\n  const testFields = [\"selectTest\"];\n\n  const issueFields = [\"selectIssue\"];\n\n  const resultFields = [\"result\"];\n\n  const otherResonId = \"e41d020b-af12-448d-9a4e-c0a5e5161651\"\n  \n  const user_ID = user.id\n\n  const formatter = new Intl.DateTimeFormat(\"ru\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  });\n\n  const hideFields = (properties, excludeFields) => {\n    for (const fieldName in properties) {\n      properties[fieldName].hidden = excludeFields.every(\n        (field) => field !== fieldName\n      );\n    }\n  };\n  \n  const blockFields = (properties) => {\n    for (const objName in properties) {\n      for (const fieldName in properties[objName].properties){\n        properties[objName].properties[fieldName].readOnly = true\n      }\n    }\n  };\n  \n  formCopy.scheme.order = [ \"numberObject\",\n    \"selectTab\",\n    \"dateTimeDuration\",\n    \"areaObject\",\n    \"actAndTypeOfWorkObject\",\n    \"customerRepresentative\",\n    \"representativeDesignerSupervisor\",\n    \"attachmentsAndComment\",\n    \"result\",\n    \"selectTest\",\n    \"subcontractor\"]\n  \n  if (formInstance.data && formInstance.data.selectTab === \"description\") {\n    hideFields(formCopy.scheme.properties, descFields);\n  }\n\n  if (formInstance.data && formInstance.data.selectTab === \"inspection\") {\n    hideFields(formCopy.scheme.properties, inspectionFields);\n    formCopy.scheme.order = [\"selectTab\", \"subcontractor\", \"customerRepresentative\", \"representativeDesignerSupervisor\"]\n     if (formInstance.data.customerRepresentative.user && formInstance.data.customerRepresentative.user.length != 0 && formInstance.data.customerRepresentative.selectOne && formInstance.data.customerRepresentative.selectOne === \"rejected\"){\n        formCopy.scheme.properties.customerRepresentative.properties.rejectReason.hidden = false;\n        formCopy.scheme.properties.customerRepresentative.required = [\"rejectReason\"];\n        if (item.data.customerRepresentative.rejectReason && item.data.customerRepresentative.rejectReason.length != 0 && otherResonId.includes(item.data.customerRepresentative.rejectReason)) {\n            formCopy.scheme.properties.customerRepresentative.properties.otherReason.hidden = false;\n            formCopy.scheme.properties.customerRepresentative.required = [\"rejectReason\",\"otherReason\"];\n        }\n        else{\n            formCopy.scheme.properties.customerRepresentative.properties.otherReason.hidden = true;\n            formCopy.scheme.properties.customerRepresentative.required = [\"rejectReason\"];\n        }\n      }\n      else if (formInstance.data.customerRepresentative.selectOne === \"accept\"){\n        formCopy.scheme.properties.customerRepresentative.properties.rejectReason.hidden = true;\n        formCopy.scheme.properties.customerRepresentative.properties.otherReason.hidden = true;\n        formCopy.scheme.properties.customerRepresentative.required = []\n      }\n      if (formInstance.data.representativeDesignerSupervisor.user && formInstance.data.representativeDesignerSupervisor.user.length != 0  && formInstance.data.representativeDesignerSupervisor.selectOne && formInstance.data.representativeDesignerSupervisor.selectOne === \"rejected\"){\n        formCopy.scheme.properties.representativeDesignerSupervisor.properties.rejectReason.hidden = false;\n        formCopy.scheme.properties.representativeDesignerSupervisor.required = [\"rejectReason\"];\n        if (item.data.representativeDesignerSupervisor.rejectReason && item.data.representativeDesignerSupervisor.rejectReason.length != 0 && otherResonId.includes(item.data.representativeDesignerSupervisor.rejectReason)){\n            formCopy.scheme.properties.representativeDesignerSupervisor.properties.otherReason.hidden = false;\n            formCopy.scheme.properties.representativeDesignerSupervisor.required = [\"rejectReason\",\"otherReason\"];\n        }\n        else{\n            formCopy.scheme.properties.representativeDesignerSupervisor.properties.otherReason.hidden = true;\n            formCopy.scheme.properties.representativeDesignerSupervisor.required = [\"rejectReason\"];\n        }\n      }\n      else if (formInstance.data.representativeDesignerSupervisor.selectOne === \"accept\") {\n        formCopy.scheme.properties.representativeDesignerSupervisor.properties.rejectReason.hidden = true;\n        formCopy.scheme.properties.representativeDesignerSupervisor.properties.otherReason.hidden = true;\n        formCopy.scheme.properties.representativeDesignerSupervisor.required = []\n      }\n  }\n \n  if (formInstance.data && formInstance.data.selectTab === \"issue\") { \n    hideFields(formCopy.scheme.properties, issueFields);\n  }\n\nformCopy.scheme.properties.subcontractor.required = [\"user\"]\n\n  if (formInstance.data && formInstance.data.selectTab === \"test\") { \n    hideFields(formCopy.scheme.properties, testFields);\n  }\n\n  if (formInstance.data && formInstance.data.selectTab === \"result\") {\n    hideFields(formCopy.scheme.properties, resultFields);\n    if (formInstance.data.result && formInstance.data.result.selectOne === \"rejected\") {\n        formCopy.scheme.properties.result.properties.rejectReason.hidden = false;\n        formCopy.scheme.properties.result.required = [\"rejectReason\"];\n        if (item.data.result.rejectReason && item.data.result.rejectReason.length != 0 && otherResonId.includes(item.data.result.rejectReason)) {\n            formCopy.scheme.properties.result.properties.otherReason.hidden = false;\n            formCopy.scheme.properties.result.required = [\"rejectReason\",\"otherReason\"];\n        }\n        else {\n            formCopy.scheme.properties.result.properties.otherReason.hidden = true;\n            formCopy.scheme.properties.result.required = [\"rejectReason\"];\n        }\n      }\n    else {\n      formCopy.scheme.properties.result.properties.rejectReason.hidden = true;\n      formCopy.scheme.properties.result.properties.otherReason.hidden = true;\n      formCopy.scheme.properties.result.required = []\n    }\n  }\n\n  if (isCreation) {\n    formCopy.scheme.properties.selectTab.hidden = true;\n    hideFields(formCopy.scheme.properties, [...creationFields]);\n    formCopy.scheme.properties.customerRepresentative.properties.selectOne.hidden = true;\n    formCopy.scheme.properties.numberObject.required = [\"number\"] \nformCopy.scheme.properties.representativeDesignerSupervisor.properties.selectOne.hidden = true;\n  } else {\n    formCopy.scheme.properties.selectTab.hidden = false;\n    formCopy.scheme.properties.numberObject.required = []\n    formCopy.scheme.properties.selectTab.default = \"description\";\n  }\n\n  \n\n  if (formInstance.data.requestStatus && formInstance.data.requestStatus.length != 0 && formInstance.data.requestStatus.includes(requestStatus_draft)){\n    \n    blockFields(formCopy.scheme.properties);\n    \n    if (user_ID.includes(item.data.subcontractor.check)) {\n        formCopy.scheme.properties.dateTimeDuration.properties.dateTime.readOnly = false\n        formCopy.scheme.properties.dateTimeDuration.properties.duration.readOnly = false\n        formCopy.scheme.properties.areaObject.properties.area.readOnly = false\n        formCopy.scheme.properties.actAndTypeOfWorkObject.properties.act.readOnly = false\n        formCopy.scheme.properties.actAndTypeOfWorkObject.properties.typeOfWork.readOnly = false\n        formCopy.scheme.properties.actAndTypeOfWorkObject.properties.rdCode.readOnly = false\n        formCopy.scheme.properties.actAndTypeOfWorkObject.properties.rdAttachments.readOnly = false\n        formCopy.scheme.properties.subcontractor.properties.user.readOnly = false\n        formCopy.scheme.properties.subcontractor.properties.selectOne.readOnly = false\n        formCopy.scheme.properties.customerRepresentative.properties.user.readOnly = false\n        formCopy.scheme.properties.representativeDesignerSupervisor.properties.user.readOnly = false\n        formCopy.scheme.properties.attachmentsAndComment.properties.attachments.readOnly = false\n        formCopy.scheme.properties.attachmentsAndComment.properties.comment.readOnly = false\n        formCopy.scheme.properties.selectTest.properties.test.readOnly = false\n        }\n    }\n  \n  if (formInstance.data.requestStatus && formInstance.data.requestStatus.length != 0 && formInstance.data.requestStatus.includes(requestStatus_review)){\n    \n    blockFields(formCopy.scheme.properties);\n    \n    if (user_ID.includes(item.data.subcontractor.check)) {\n        formCopy.scheme.properties.dateTimeDuration.properties.dateTime.readOnly = false\n        formCopy.scheme.properties.dateTimeDuration.properties.duration.readOnly = false\n        formCopy.scheme.properties.subcontractor.properties.user.readOnly = false\n        formCopy.scheme.properties.subcontractor.properties.selectOne.readOnly = false\n    }\n    \n    if (user_ID.includes(item.data.customerRepresentative.check)) {\n        formCopy.scheme.properties.dateTimeDuration.properties.dateTime.readOnly = false\n        formCopy.scheme.properties.dateTimeDuration.properties.duration.readOnly = false\n        formCopy.scheme.properties.customerRepresentative.properties.user.readOnly = false\n        formCopy.scheme.properties.customerRepresentative.properties.selectOne.readOnly = false\n        formCopy.scheme.properties.customerRepresentative.properties.rejectReason.readOnly = false\n        formCopy.scheme.properties.customerRepresentative.properties.otherReason.readOnly = false\n        formCopy.scheme.properties.selectTest.properties.test.readOnly = false\n    }\n    \n    if (item.data.representativeDesignerSupervisor && item.data.representativeDesignerSupervisor.user && item.data.representativeDesignerSupervisor.user.length != 0 && user_ID.includes(item.data.representativeDesignerSupervisor.check)) {\n        formCopy.scheme.properties.representativeDesignerSupervisor.properties.user.readOnly = false\n        formCopy.scheme.properties.representativeDesignerSupervisor.properties.selectOne.readOnly = false\n        formCopy.scheme.properties.representativeDesignerSupervisor.properties.rejectReason.readOnly = false\n        formCopy.scheme.properties.representativeDesignerSupervisor.properties.otherReason.readOnly = false\n    }\n  }\n  \n  if (formInstance.data.requestStatus && formInstance.data.requestStatus.length != 0 && formInstance.data.requestStatus.includes(requestStatus_rejected)){\n    \n    blockFields(formCopy.scheme.properties);\n    \n    if (user_ID.includes(item.data.subcontractor.check)) {\n        formCopy.scheme.properties.dateTimeDuration.properties.dateTime.readOnly = false\n        formCopy.scheme.properties.dateTimeDuration.properties.duration.readOnly = false\n        formCopy.scheme.properties.areaObject.properties.area.readOnly = false\n        formCopy.scheme.properties.actAndTypeOfWorkObject.properties.act.readOnly = false\n        formCopy.scheme.properties.actAndTypeOfWorkObject.properties.typeOfWork.readOnly = false\n        formCopy.scheme.properties.actAndTypeOfWorkObject.properties.rdCode.readOnly = false\n        formCopy.scheme.properties.actAndTypeOfWorkObject.properties.rdAttachments.readOnly = false\n        formCopy.scheme.properties.subcontractor.properties.user.readOnly = false\n        formCopy.scheme.properties.subcontractor.properties.selectOne.readOnly = false\n        formCopy.scheme.properties.customerRepresentative.properties.user.readOnly = false\n        formCopy.scheme.properties.representativeDesignerSupervisor.properties.user.readOnly = false\n        formCopy.scheme.properties.attachmentsAndComment.properties.attachments.readOnly = false\n        formCopy.scheme.properties.attachmentsAndComment.properties.comment.readOnly = false\n        formCopy.scheme.properties.selectTest.properties.test.readOnly = false\n        }\n    \n    if (user_ID.includes(item.data.customerRepresentative.check)) {\n        formCopy.scheme.properties.dateTimeDuration.properties.dateTime.readOnly = false\n        formCopy.scheme.properties.dateTimeDuration.properties.duration.readOnly = false\n        formCopy.scheme.properties.customerRepresentative.properties.user.readOnly = false\n        formCopy.scheme.properties.customerRepresentative.properties.selectOne.readOnly = false\n        formCopy.scheme.properties.customerRepresentative.properties.rejectReason.readOnly = false\n        formCopy.scheme.properties.customerRepresentative.properties.otherReason.readOnly = false\n        formCopy.scheme.properties.selectTest.properties.test.readOnly = false\n    }\n  }\n\n  if (formInstance.data.requestStatus && formInstance.data.requestStatus.length != 0 && formInstance.data.requestStatus.includes(requestStatus_confirmed)){\n    \n    blockFields(formCopy.scheme.properties);\n    \n    if (user_ID.includes(item.data.subcontractor.check)) {\n        formCopy.scheme.properties.subcontractor.properties.user.readOnly = false\n        formCopy.scheme.properties.subcontractor.properties.selectOne.readOnly = false\n    }\n    \n    if (user_ID.includes(item.data.customerRepresentative.check)) {\n        formCopy.scheme.properties.customerRepresentative.properties.user.readOnly = false\n        formCopy.scheme.properties.customerRepresentative.properties.selectOne.readOnly = false\n        formCopy.scheme.properties.customerRepresentative.properties.rejectReason.readOnly = false\n        formCopy.scheme.properties.customerRepresentative.properties.otherReason.readOnly = false\n        formCopy.scheme.properties.result.properties.selectOne.readOnly = false\n        formCopy.scheme.properties.result.properties.rejectReason.readOnly = false\n        formCopy.scheme.properties.result.properties.otherReason.readOnly = false\n        formCopy.scheme.properties.selectIssue.properties.issue.readOnly = false\n        formCopy.scheme.properties.selectTest.properties.test.readOnly = false\n        if (item.data.result && item.data.result.selectOne && (item.data.result.selectOne = \"accept\" || (item.data.result.selectOne = \"rejected\" && item.data.result.rejectReason.length != 0 && item.data.result.otherReason))) {\n           formCopy.scheme.properties.result.properties.close.readOnly = false\n        }\n    }\n    \n    if (item.data.representativeDesignerSupervisor && item.data.representativeDesignerSupervisor.user && item.data.representativeDesignerSupervisor.user.length != 0 && user_ID.includes(item.data.representativeDesignerSupervisor.check)) {\n        formCopy.scheme.properties.representativeDesignerSupervisor.properties.user.readOnly = false\n        formCopy.scheme.properties.representativeDesignerSupervisor.properties.selectOne.readOnly = false\n        formCopy.scheme.properties.representativeDesignerSupervisor.properties.rejectReason.readOnly = false\n        formCopy.scheme.properties.representativeDesignerSupervisor.properties.otherReason.readOnly = false\n    }\n  }\n\n  if (formInstance.data.requestStatus && formInstance.data.requestStatus.length != 0 && (formInstance.data.requestStatus.includes(requestStatus_accepted) || formInstance.data.requestStatus.includes(requestStatus_notAccepted))){\n    \n    blockFields(formCopy.scheme.properties);\n    \n  }\n\n  \n   if (Object.keys(formInstance.data).length != 0 ){\n    if (formInstance.data.subcontractor.user && formInstance.data.subcontractor.user.length != 0 && formInstance.data.dateTimeDuration.dateTime != 0 && formInstance.data.dateTimeDuration.duration != 0 && formInstance.data.actAndTypeOfWorkObject && formInstance.data.actAndTypeOfWorkObject.rdCode && formInstance.data.actAndTypeOfWorkObject.rdCode.length != 0 && formInstance.data.actAndTypeOfWorkObject.typeOfWork && formInstance.data.actAndTypeOfWorkObject.typeOfWork.length != 0 && formInstance.data.actAndTypeOfWorkObject.act && formInstance.data.customerRepresentative.user && formInstance.data.customerRepresentative.user.length != 0 && formInstance.data.actAndTypeOfWorkObject.rdAttachments && formInstance.data.actAndTypeOfWorkObject.rdAttachments.length != 0 && formInstance.data.areaObject && formInstance.data.areaObject.area && formInstance.data.areaObject.area.length != 0 && user_ID.includes(item.data.subcontractor.user) && (isCreation || formInstance.data.requestStatus.includes(requestStatus_draft) || formInstance.data.requestStatus.includes(requestStatus_confirmed) || formInstance.data.requestStatus.includes(requestStatus_rejected) || formInstance.data.requestStatus.includes(requestStatus_review))){\n          formCopy.scheme.properties.subcontractor.properties.selectOne.readOnly = false\n          formCopy.scheme.properties.subcontractor.properties.selectOne.helperText = \"\"\n      }\n      else {\n          formCopy.scheme.properties.subcontractor.properties.selectOne.readOnly = true\n          formCopy.scheme.properties.subcontractor.properties.selectOne.helperText = \"Чтобы ваша заявка отправилась на рассмотрение, измените статус на «Готов к приёмке». Для этого нужно заполнить все обязательные поля. Если вы пока не можете это сделать, сохраните заявку в статусе «Не готов к приёмке» и завершите заполнение позже.\"\n      }\n  }\n\n  return formCopy;\n}\n",
	"form": "6260fd7098497201a5000013",
	"relationsData": [],
	"createdDate": 1652349299084,
	"updatedDate": 1660044960868,
	"owner": null,
	"assignedTo": null,
	"parent": null
}