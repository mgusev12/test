{
	"id": "6286356a98497201a5000700",
	"title": "viewUpdate Mikheeva test form",
	"hookType": "viewUpdate",
	"function": "function viewUpdate(props) {\n    const { user, item, form, isCreation = false } = props;\n    const formInstance = item;\n    //console.warn(\"formInstance\", formInstance.data?.selectTab);\n    const formCopy = Object.assign(Object.create(Object.getPrototypeOf(form)), form);\n\n    const isOwner = formInstance.owner === user.id;\n    const isReviewer = formInstance.reviewers ? formInstance.reviewers.some(rev => rev === user.id) : false;\n\n    const descFields =  [\n        \"instances\",\n        \"numberOfContract\",\n        \"constractionObject\",\n        \"rdCode\",\n        \"jobCategory\",\n        \"dateTime\",\n        \"duration\",\n        \"typeOfWorkPresented\",\n        \"structuralElement\",\n        \"description\",\n        \"volume\",\n        \"selectVariantsB\",\n        \"measurementUnits\",\n        \"reasonForRejection\",\n        \"comment\",\n        \"selectAny\",\n        \"hierarchicalDirectory\"\n    ];\n\n    const inspectionFields =  [\"customer\", \"subcontractor\", \"contractor\", \"generalContractor\", \"authorSupervision\"];\n\n    const docFields =  [\"executiveDocumentations\", \"workingDocumentations\", \"forge\"];\n\n    const hideFields = (properties, excludeFields) => {\n        for (const fieldName in properties) {\n            properties[fieldName].hidden = excludeFields.every(field => field !== fieldName);\n        }\n    };\n\n    const objectFields = [\"authorSupervision\", \"contractor\", \"customer\", \"generalContractor\", \"subcontractor\"];\n\n    if (!isOwner && !isReviewer) {\n        for (const fieldName in formCopy.scheme.properties) {\n            formCopy.scheme.properties[fieldName].readOnly = true;\n        }\n        objectFields.forEach(objectField => {\n            if (formCopy.scheme.properties[objectField] && formCopy.scheme.properties[objectField].properties){\n                for (const objField in formCopy.scheme.properties[objectField].properties) {\n                    formCopy.scheme.properties[objectField].properties[objField].readOnly = true;\n                }\n            }\n        });\n    }\n\n    if (formInstance.data && formInstance.data.selectTab === \"description\") {\n        hideFields(formCopy.scheme.properties, descFields);\n    }\n    if (formInstance.data && formInstance.data.selectTab === \"documentation\") {\n        hideFields(formCopy.scheme.properties, docFields);\n    }\n    if (formInstance.data && formInstance.data.selectTab === \"inspection\") {\n        hideFields(formCopy.scheme.properties, inspectionFields);\n    }\n    if (formInstance.data && formInstance.data.selectTab === \"result\") {\n        hideFields(formCopy.scheme.properties, []);\n    }\n\n    if (isCreation) {\n        formCopy.scheme.properties.selectTab.hidden = true;\n        hideFields(formCopy.scheme.properties, [...descFields, ...inspectionFields.filter(el => el === \"subcontractor\")]);\n    } else {\n        formCopy.scheme.properties.selectTab.hidden = false;\n        formCopy.scheme.properties.selectTab.default = \"description\";\n    }\n\n    if (formCopy.scheme.properties.reasonForRejection.hidden === false) {\n        formCopy.scheme.properties.comment.hidden = !formInstance.data.reasonForRejection;\n    }\n    //console.warn(\"formCopy\", formCopy.scheme.properties);\n    return formCopy;\n}\n\n",
	"form": "6266689498497201a5000040",
	"relationsData": [],
	"createdDate": 1652962666104,
	"updatedDate": 1652963453136,
	"owner": null,
	"assignedTo": null,
	"parent": null
}