{
	"id": "623b10746c5347019d000017",
	"title": "Polus_Issue_ViewUpdate",
	"hookType": "viewUpdate",
	"function": "function viewUpdate(props) {\n  const { user, item, form, isCreation = false } = props;\n  const formInstance = item;\n  //console.warn(\"formInstance\", formInstance.data?.selectTab);\n  const formCopy = Object.assign(\n    Object.create(Object.getPrototypeOf(form)),\n    form\n  );\n\n  const isOwner = formInstance.owner === user.id;\n  const isReviewer = formInstance.reviewers\n    ? formInstance.reviewers.some((rev) => rev === user.id)\n    : false;\n  \n  const issueStatus_opened = \"opened\";\n  const issueStatus_draft = \"draft\";\n  const issueStatus_eliminated = \"eliminated\";\n  const issueStatus_closed = \"closed\";\n  const user_ID = user.id\n  \n  const descFields = [\n    \"attachmentsAndComment\",\n    \"members\",\n    \"info\",\n  ];\n\n  const createFields = [\n    \"numberObject\",\n    \"memberStatus\",\n    \"attachmentsAndComment\",\n    \"members\",\n    \"info\",\n    \"selectTest\",\n    \"selectRequest\"\n  ]\n\n  const processFields = [\"memberStatus\"];\n\n  const testFields = [\"selectTest\"];\n\n  const requestFields = [\"selectRequest\"];\n\n  const formatter = new Intl.DateTimeFormat(\"ru\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  });\n\n  const hideFields = (properties, excludeFields) => {\n    for (const fieldName in properties) {\n      properties[fieldName].hidden = excludeFields.every(\n        (field) => field !== fieldName\n      );\n    }\n  };\n  \n  const blockFields = (properties) => {\n    for (const objName in properties) {\n      for (const fieldName in properties[objName].properties){\n        properties[objName].properties[fieldName].readOnly = true\n      }\n    }\n  };\n\n  if (formInstance.data && formInstance.data.selectTab === \"description\") {\n    hideFields(formCopy.scheme.properties, descFields);\n    if (formInstance.data.info.criticality === \"critical\"){\n      formCopy.scheme.properties.info.properties.stopWork.hidden = false\n    }\n    else {\n      formCopy.scheme.properties.info.properties.stopWork.hidden = true\n    }\n  }\n\n  if (formInstance.data && formInstance.data.selectTab === \"process\") {\n    hideFields(formCopy.scheme.properties, processFields);\n    formCopy.scheme.properties.memberStatus.properties.executorStatus.hidden = false;\n    formCopy.scheme.properties.memberStatus.properties.eliminationConfirmation.hidden = false;\n    formCopy.scheme.properties.memberStatus.properties.close.hidden = false;\n    if ((formInstance.data.memberStatus && formInstance.data.memberStatus.executorStatus && formInstance.data.memberStatus.executorStatus === \"issued\") || (formInstance.data.memberStatus.eliminationConfirmation)){\n      formCopy.scheme.properties.memberStatus.properties.whatEliminate.hidden = false;\n      if (formInstance.data.memberStatus.executorStatus === \"issued\"){\n          formCopy.scheme.properties.memberStatus.required = [\"whatEliminate\"]\n      }\n    }\n    \n  }\n\n  if (formInstance.data && formInstance.data.selectTab === \"request\") { \n    hideFields(formCopy.scheme.properties, requestFields);\n  }\n\n  if (formInstance.data){\n    formCopy.scheme.properties.members.required = [\"responsible\"]\n  }\n  \n  if (formInstance.data && formInstance.data.selectTab === \"test\") { \n    hideFields(formCopy.scheme.properties, testFields);\n  }\n\n  if (isCreation) {\n    formCopy.scheme.properties.selectTab.hidden = true;\n    hideFields(formCopy.scheme.properties, [...createFields]);\n    formCopy.scheme.properties.members.properties.eliminationResponsible.readOnly = true\n    formCopy.scheme.properties.numberObject.required = [\"number\"]\n    if (formInstance.data.info.criticality === \"critical\"){\n      formCopy.scheme.properties.info.properties.stopWork.hidden = false\n    }\n    else {\n      formCopy.scheme.properties.info.properties.stopWork.hidden = true\n    }\n  } else {\n    formCopy.scheme.properties.selectTab.hidden = false;\n    formCopy.scheme.properties.selectTab.default = \"description\";\n    formCopy.scheme.properties.numberObject.required = []\n  }\n\n  \n  if (formInstance.data.issueStatus && formInstance.data.issueStatus.length != 0 && formInstance.data.issueStatus.includes(issueStatus_draft)){\n    \n    blockFields(formCopy.scheme.properties);\n    \n    if(user_ID.includes(item.data.responsibleCheck)){\n      formCopy.scheme.properties.memberStatus.properties.responsibleStatus.readOnly = false\n      formCopy.scheme.properties.attachmentsAndComment.properties.attachments.readOnly = false\n      formCopy.scheme.properties.attachmentsAndComment.properties.comment.readOnly = false\n      formCopy.scheme.properties.members.properties.responsible.readOnly = false\n      formCopy.scheme.properties.members.properties.executor.readOnly = false\n      formCopy.scheme.properties.info.properties.contraventionObject.readOnly = false\n      formCopy.scheme.properties.info.properties.typeOfWork.readOnly = false\n      formCopy.scheme.properties.info.properties.criticality.readOnly = false\n      formCopy.scheme.properties.info.properties.dateTime.readOnly = false\n      formCopy.scheme.properties.info.properties.area.readOnly = false\n      formCopy.scheme.properties.info.properties.cafm.readOnly = false\n      formCopy.scheme.properties.info.properties.disturbedPoint.readOnly = false\n      formCopy.scheme.properties.selectTest.properties.test.readOnly = false\n      formCopy.scheme.properties.selectRequest.properties.request.readOnly = false\n      formCopy.scheme.properties.info.properties.stopWork.readOnly = false\n      formCopy.scheme.properties.info.properties.remedialAction.readOnly = false      \n    }\n    \n   if (item.data.executorCheck && user_ID.includes(item.data.executorCheck)){\n      formCopy.scheme.properties.members.properties.eliminationResponsible.readOnly = false\n   }\n    \n  }\n  \n  \n  if (formInstance.data.issueStatus && formInstance.data.issueStatus.length != 0 && formInstance.data.issueStatus.includes(issueStatus_opened)){\n    \n    blockFields(formCopy.scheme.properties);\n    \n    if(user_ID.includes(item.data.responsibleCheck)){\n      formCopy.scheme.properties.memberStatus.properties.responsibleStatus.readOnly = false\n      formCopy.scheme.properties.attachmentsAndComment.properties.attachments.readOnly = false\n      formCopy.scheme.properties.attachmentsAndComment.properties.comment.readOnly = false\n      formCopy.scheme.properties.members.properties.responsible.readOnly = false\n      formCopy.scheme.properties.members.properties.executor.readOnly = false\n      formCopy.scheme.properties.info.properties.contraventionObject.readOnly = false\n      formCopy.scheme.properties.info.properties.typeOfWork.readOnly = false\n      formCopy.scheme.properties.info.properties.criticality.readOnly = false\n      formCopy.scheme.properties.info.properties.dateTime.readOnly = false\n      formCopy.scheme.properties.info.properties.area.readOnly = false\n      formCopy.scheme.properties.info.properties.cafm.readOnly = false\n      formCopy.scheme.properties.info.properties.disturbedPoint.readOnly = false\n      formCopy.scheme.properties.selectTest.properties.test.readOnly = false\n      formCopy.scheme.properties.selectRequest.properties.request.readOnly = false\n      formCopy.scheme.properties.info.properties.stopWork.readOnly = false\n      formCopy.scheme.properties.info.properties.remedialAction.readOnly = false \n    }\n    if (user_ID.includes(item.data.executorCheck)){\n      formCopy.scheme.properties.memberStatus.properties.executorStatus.readOnly = false\n      formCopy.scheme.properties.attachmentsAndComment.properties.attachments.readOnly = false\n      formCopy.scheme.properties.members.properties.executor.readOnly = false\n      formCopy.scheme.properties.selectTest.properties.test.readOnly = false\n      formCopy.scheme.properties.memberStatus.properties.whatEliminate.readOnly = false\n      formCopy.scheme.properties.members.properties.eliminationResponsible.readOnly = false\n    }\n  }\n  \n  if (formInstance.data.issueStatus && formInstance.data.issueStatus.length != 0 && formInstance.data.issueStatus.includes(issueStatus_eliminated)){\n    \n    blockFields(formCopy.scheme.properties);\n    \n    if(user_ID.includes(item.data.responsibleCheck)){\n      formCopy.scheme.properties.memberStatus.properties.eliminationConfirmation.readOnly = false\n      formCopy.scheme.properties.selectTest.properties.test.readOnly = false\n      formCopy.scheme.properties.selectRequest.properties.request.readOnly = false\n      if (formInstance.data.memberStatus && formInstance.data.memberStatus.eliminationConfirmation && formInstance.data.memberStatus.eliminationConfirmation === \"issued\"){\n          formCopy.scheme.properties.memberStatus.properties.close.readOnly = false\n      }  \n      else{\n          formCopy.scheme.properties.memberStatus.properties.close.readOnly = true\n      }\n    }\n    \n    if (user_ID.includes(item.data.executorCheck)){\n      formCopy.scheme.properties.memberStatus.properties.executorStatus.readOnly = false\n      formCopy.scheme.properties.selectTest.properties.test.readOnly = false\n      formCopy.scheme.properties.members.properties.eliminationResponsible.readOnly = false\n    }\n  }\n  \n  if (formInstance.data.issueStatus && formInstance.data.issueStatus.length != 0 && formInstance.data.issueStatus.includes(issueStatus_closed)){\n    \n    blockFields(formCopy.scheme.properties);\n          \n  }\n  \n  if (!isCreation && !(user_ID.includes(item.data.responsibleCheck)) && !(user_ID.includes(item.data.executorCheck))){\n    \n    blockFields(formCopy.scheme.properties);\n    \n  }\n  \n  if (formInstance.data.members && formInstance.data.members.responsible && formInstance.data.members.responsible.length != 0 && formInstance.data.members.executor && formInstance.data.members.executor.length != 0 && formInstance.data.info.typeOfWork && formInstance.data.info.typeOfWork.length != 0 && formInstance.data.info.dateTime && formInstance.data.info.dateTime != 0 && formInstance.data.info.area && formInstance.data.info.area.length != 0 && user_ID.includes(item.data.members.responsible) && ( !(formInstance.data.issueStatus) || formInstance.data.issueStatus.includes(issueStatus_draft) || formInstance.data.issueStatus.includes(issueStatus_opened))){\n    formCopy.scheme.properties.memberStatus.properties.responsibleStatus.readOnly = false\n    formCopy.scheme.properties.memberStatus.properties.responsibleStatus.helperText = \"\"\n  }\n  else{\n    formCopy.scheme.properties.memberStatus.properties.responsibleStatus.readOnly = true\n    formCopy.scheme.properties.memberStatus.properties.responsibleStatus.helperText = \"Чтобы исполнителю пришло уведомление о вашем замечание, измените статус на «Выдано». Для этого нужно заполнить все обязательные поля(*). Если вы пока не можете это сделать, сохраните заявку в статусе «Не выдано» и завершите заполнение позже.\"\n  }\n  \n  if (formInstance.data.dateCheck.dateCount === 2){\n    formCopy.scheme.properties.info.properties.dateTime.readOnly = true\n  }\n  \n  //let number = Math.max(formCopy.scheme.properties.testViewDisplay.variables.number);\n  //formCopy.scheme.properties.testViewDisplay.variables.number  = number + 1;\n\n\n  //console.warn(\"viewUpdate\", formCopy.scheme.properties.testViewDisplay);\n  //console.log(formInstance);\n // console.log(Math.max(formCopy.scheme.properties.testViewDisplay.variables.number));\n  //console.log(number);\n\n  return formCopy;\n}\n",
	"form": "623b0f296c5347019d00000c",
	"relationsData": [],
	"createdDate": 1648038004729,
	"updatedDate": 1660108691585,
	"owner": null,
	"assignedTo": null,
	"parent": null
}