{
	"id": "62a335a498497201a5000f7a",
	"title": "Polue_InControl_viewUpdate",
	"hookType": "viewUpdate",
	"function": "function viewUpdate(props) {\n  const { user, item, form, isCreation = false } = props;\n  const formInstance = item;\n  //console.warn(\"formInstance\", formInstance.data?.selectTab);\n  const formCopy = Object.assign(\n    Object.create(Object.getPrototypeOf(form)),\n    form\n  );\n\n  const isOwner = formInstance.owner === user.id;\n  const isReviewer = formInstance.reviewers\n    ? formInstance.reviewers.some((rev) => rev === user.id)\n    : false\n  \n  const user_ID = user.id\n  const requestStatus_draft = \"draft\";\n  const requestStatus_review = \"review\";\n  const requestStatus_confirmed = \"confirmed\";\n  const requestStatus_rejected = \"rejected\";\n  const requestStatus_accepted = \"accepted\";\n  const requestStatus_notAccepted = \"notAccepted\";\n  \n  const descFields = [\"info\"];\n\n  const createFields = [\n    \"numberObject\",\n    \"responsible\",\n    \"info\",\n    \"engineer\"\n  ]\n\n  const inspectionFields = [\n    \"responsible\",\n    \"engineer\",\n    \"subcontractor\",\n    \"supervision\"\n  ];\n\n  const testFields = [\"selectTest\"];\n\n  const checklistFields = [\"checklistObject\", \"checklistView\"];\n  \n  const resultFields = [\"result\"];\n\n  const formatter = new Intl.DateTimeFormat(\"ru\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  });\n\n  const hideFields = (properties, excludeFields) => {\n    for (const fieldName in properties) {\n      properties[fieldName].hidden = excludeFields.every(\n        (field) => field !== fieldName\n      );\n    }\n  };\n  \n  const blockFields = (properties) => {\n    for (const objName in properties) {\n      for (const fieldName in properties[objName].properties){\n        properties[objName].properties[fieldName].readOnly = true\n      }\n    }\n  };\n  \n  let checklistCheck = true\n  \n  if (!(isCreation) && formInstance.data.checklistView) {\n   if (formInstance.data.checklistObject){\n       const checklistGroup = formInstance.data.chelistObject\n       for (const fildName in checklistGroup){\n          if (checklistGroup[fildName] === null){\n            checklistCheck = false;\n            break\n          }\n       }\n   }\n     else {\n     checklistCheck = false\n   }\n  }\n  else {\n     checklistCheck = false\n }\n  \n  formCopy.scheme.properties.responsible.required = [\"user\"]\n  \n  formCopy.scheme.order = [\"numberObject\", \"selectTab\", \"info\", \"engineer\", \"responsible\"]\n  \n  if (formInstance.data && formInstance.data.selectTab === \"description\") {\n    hideFields(formCopy.scheme.properties, descFields);\n  }\n\n  if (formInstance.data && formInstance.data.selectTab === \"inspection\") {\n    hideFields(formCopy.scheme.properties, inspectionFields);\n    formCopy.scheme.order = [\"selectTab\",\"responsible\",\"engineer\", \"subcontractor\",\"supervision\"]\n    if (formInstance.data.engineer && formInstance.data.engineer.user && formInstance.data.engineer.user.length != 0){\n      formCopy.scheme.properties.engineer.properties.selectOne.hidden = false\n      if (formInstance.data.engineer.selectOne && formInstance.data.engineer.selectOne === \"notAccept\"){\n          formCopy.scheme.properties.engineer.properties.rejectReason.hidden = false\n        }\n        else {\n          formCopy.scheme.properties.engineer.properties.rejectReason.hidden = true\n        }\n    }\n    else {\n      formCopy.scheme.properties.engineer.properties.selectOne.hidden = true\n    }\n    \n    if (formInstance.data.subcontractor && formInstance.data.subcontractor.user && formInstance.data.subcontractor.user.length != 0){\n      formCopy.scheme.properties.subcontractor.properties.selectOne.hidden = false\n      if (formInstance.data.subcontractor.selectOne && formInstance.data.subcontractor.selectOne === \"notAccept\"){\n          formCopy.scheme.properties.subcontractor.properties.rejectReason.hidden = false\n        }\n        else {\n          formCopy.scheme.properties.subcontractor.properties.rejectReason.hidden = true\n        }\n    }\n    else {\n      formCopy.scheme.properties.subcontractor.properties.selectOne.hidden = true\n    }\n    \n    if (formInstance.data.supervision && formInstance.data.supervision.user && formInstance.data.supervision.user.length != 0){\n      formCopy.scheme.properties.supervision.properties.selectOne.hidden = false\n      if (formInstance.data.supervision.selectOne && formInstance.data.supervision.selectOne === \"notAccept\"){\n          formCopy.scheme.properties.supervision.properties.rejectReason.hidden = false\n        }\n        else {\n          formCopy.scheme.properties.supervision.properties.rejectReason.hidden = true\n        }\n    }\n    else {\n      formCopy.scheme.properties.supervision.properties.selectOne.hidden = true\n    }\n  }\n  \n  if (formInstance.data && formInstance.data.selectTab === \"result\") {\n    hideFields(formCopy.scheme.properties, resultFields);\n    if (formInstance.data.result && formInstance.data.result.selectOne === \"rejected\"){\n      formCopy.scheme.properties.result.properties.rejectReason.hidden = false\n    }\n    else {\n      formCopy.scheme.properties.result.properties.rejectReason.hidden = true\n    }\n    if (formInstance.data.result && (formInstance.data.result.selectOne)){\n      formCopy.scheme.properties.result.properties.selectOne.helperText = formInstance.data.nowTime   \n    }\n  }\n\n  if (formInstance.data && formInstance.data.selectTab === \"checklist\") { \n    hideFields(formCopy.scheme.properties, checklistFields);\n  }\n\n  if (formInstance.data && formInstance.data.selectTab === \"test\") { \n    hideFields(formCopy.scheme.properties, testFields);\n  }\n\n  if (isCreation) {\n    formCopy.scheme.properties.selectTab.hidden = true;\n    hideFields(formCopy.scheme.properties, [...createFields]);\n    formCopy.scheme.properties.engineer.properties.selectOne.hidden = true\n    formCopy.scheme.properties.numberObject.required = [\"number\"]\n  } else {\n    formCopy.scheme.properties.selectTab.hidden = false;\n    formCopy.scheme.properties.selectTab.default = \"description\";\n  }\n  \n  if (!(isCreation)){\n         blockFields(formCopy.scheme.properties);\n         formCopy.scheme.properties.checklistObject.readOnly = true\n         formCopy.scheme.properties.checklistView.readOnly = true\n    //Материально-ответственное лицо\n    if (item.data.responsible.check && user_ID.includes(item.data.responsible.check)){\n      if (formInstance.data.inControlStatus.includes(requestStatus_review) || formInstance.data.inControlStatus.includes(requestStatus_confirmed)){\n         formCopy.scheme.properties.info.properties.dateTime.readOnly = false\n         formCopy.scheme.properties.responsible.properties.user.readOnly = false\n         formCopy.scheme.properties.responsible.properties.selectOne.readOnly = false\n      }\n     else if (formInstance.data.inControlStatus.includes(requestStatus_draft) || formInstance.data.inControlStatus.includes(requestStatus_rejected)){\n         formCopy.scheme.properties.info.properties.dateTime.readOnly = false \n         formCopy.scheme.properties.info.properties.mtp.readOnly = false \n         formCopy.scheme.properties.info.properties.count.readOnly = false \n         formCopy.scheme.properties.info.properties.organization.readOnly = false \n         formCopy.scheme.properties.info.properties.supDocs.readOnly = false \n         formCopy.scheme.properties.info.properties.area.readOnly = false\n         formCopy.scheme.properties.engineer.properties.user.readOnly = false\n         formCopy.scheme.properties.responsible.properties.user.readOnly = false\n         formCopy.scheme.properties.responsible.properties.selectOne.readOnly = false\n     }\n   }\n   //Инженер ОВиСК  \n   if (item.data.engineer.check && user_ID.includes(item.data.engineer.check)){\n      if (formInstance.data.inControlStatus.includes(requestStatus_review) || formInstance.data.inControlStatus.includes(requestStatus_confirmed) || formInstance.data.inControlStatus.includes(requestStatus_rejected)){\n         formCopy.scheme.properties.info.properties.dateTime.readOnly = false\n         formCopy.scheme.properties.engineer.properties.selectOne.readOnly = false\n         formCopy.scheme.properties.engineer.properties.rejectReason.readOnly = false\n         formCopy.scheme.properties.engineer.properties.user.readOnly = false\n         formCopy.scheme.properties.selectTest.properties.test.readOnly = false\n         formCopy.scheme.properties.checklistObject.readOnly = false\n         formCopy.scheme.properties.checklistView.readOnly = false\n         if (formInstance.data.inControlStatus.includes(requestStatus_confirmed)){\n             formCopy.scheme.properties.supervision.properties.user.readOnly = false\n             formCopy.scheme.properties.subcontractor.properties.user.readOnly = false\n             if (checklistCheck){    \n                 formCopy.scheme.properties.result.properties.selectOne.readOnly = false\n                 formCopy.scheme.properties.result.properties.rejectReason.readOnly = false\n                 if (formInstance.data.result && formInstance.data.result.selectOne) {\n                    formCopy.scheme.properties.result.properties.close.readOnly = false\n                 }\n                 else {\n                    formCopy.scheme.properties.result.properties.close.readOnly = true\n                 }\n             }\n           }\n         }\n     }\n   \n    if  (item.data.subcontractor && item.data.subcontractor.check && user_ID.includes(item.data.subcontractor.check)){\n      if (formInstance.data.inControlStatus.includes(requestStatus_review) || formInstance.data.inControlStatus.includes(requestStatus_confirmed) || formInstance.data.inControlStatus.includes(requestStatus_rejected)){\n        formCopy.scheme.properties.info.properties.dateTime.readOnly = false\n        formCopy.scheme.properties.subcontractor.properties.user.readOnly = false\n        formCopy.scheme.properties.subcontractor.properties.selectOne.readOnly = false\n        formCopy.scheme.properties.subcontractor.properties.rejectReason.readOnly = false\n      }\n    }  \n    \n    if  (item.data.supervision && item.data.supervision.check && user_ID.includes(item.data.supervision.check)){\n      if (formInstance.data.inControlStatus.includes(requestStatus_review) || formInstance.data.inControlStatus.includes(requestStatus_confirmed) || formInstance.data.inControlStatus.includes(requestStatus_rejected)){\n        formCopy.scheme.properties.info.properties.dateTime.readOnly = false\n        formCopy.scheme.properties.supervision.properties.user.readOnly = false\n        formCopy.scheme.properties.supervision.properties.selectOne.readOnly = false\n        formCopy.scheme.properties.supervision.properties.rejectReason.readOnly = false\n      }\n    }\n   } \n  \n  if (formInstance.data.responsible && formInstance.data.responsible.user && formInstance.data.responsible.user.length != 0 && formInstance.data.info.dateTime != 0 && formInstance.data.info.mtp && formInstance.data.info.mtp != \"\" && formInstance.data.info.count && formInstance.data.info.organization != \"\" && formInstance.data.info.supDocs && formInstance.data.info.supDocs.length != 0 && formInstance.data.info.area && formInstance.data.info.area.length != 0 && formInstance.data.engineer && formInstance.data.engineer.user && formInstance.data.engineer.user.length != 0 && user_ID.includes(item.data.responsible.user)){\n          formCopy.scheme.properties.responsible.properties.selectOne.readOnly = false\n          formCopy.scheme.properties.responsible.properties.selectOne.helperText = \"\"\n      }\n      else {\n          formCopy.scheme.properties.responsible.properties.selectOne.readOnly = true\n          formCopy.scheme.properties.responsible.properties.selectOne.helperText = \"Чтобы ваша заявка на входной контроль отправилась на рассмотрение, измените статус на «Готов к входному контролю». Для этого нужно заполнить все обязательные поля. Если вы пока не можете это сделать, сохраните заявку в статусе «Не готов к входному контролю» и завершите заполнение позже.\"\n      } \n   \n  \n if (formInstance.data && !formInstance.data.checklistView?.length && !formCopy.scheme.properties.checklistObject.hidden) {\n        formCopy.scheme.properties.checklistObject.hidden = true;\n        formCopy.scheme.properties.checklistObject.id = undefined;\n        formCopy.scheme.properties.checklistObject.groups = [];\n        formCopy.scheme.properties.checklistObject.variants = [];\n    }\n\n    if (formInstance.data && formInstance.data.selectTab === \"checklist\" && formInstance.data.checklistView &&\n        formInstance.data.checklistView[0].id !== formCopy.scheme.properties.checklistObject?.id\n    ) {\n        const checklist = formInstance.data.checklistView[0];\n        formCopy.scheme.properties.checklistObject = {\n            ...formCopy.scheme.properties.checklistObject,\n            id: checklist.id,\n            groups: checklist.groups,\n            variants: checklist.variants,\n            hidden: false,\n        };\n    }\n  \n  if (formInstance.data && formInstance.data.info && formInstance.data.info.mtp){\n    formInstance.data.info.units = [formInstance.data.info.mtp[0].units_id]\n  }\n  else {\n    delete formInstance.data.info.units\n  }\n  console.log(formInstance);\n  return formCopy\n}",
	"form": "62a1f67e98497201a5000f1c",
	"relationsData": [],
	"createdDate": 1654863268052,
	"updatedDate": 1661244093033,
	"owner": null,
	"assignedTo": null,
	"parent": null
}