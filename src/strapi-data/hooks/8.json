{
	"id": "627e4fd998497201a5000442",
	"title": "Polus_Trial_veiwUpdate",
	"hookType": "viewUpdate",
	"function": "function viewUpdate(props) {\n  const { user, item, form, isCreation = false } = props;\n  const formInstance = item;\n  //console.warn(\"formInstance\", formInstance.data?.selectTab);\nlet formCopy = Object.assign(\n    Object.create(Object.getPrototypeOf(form)),\n    form\n  );\n    \n  const isOwner = formInstance.owner === user.id;\n  const isReviewer = formInstance.reviewers\n    ? formInstance.reviewers.some((rev) => rev === user.id)\n    : false;\n  const user_ID = user.id\n\n    const trialStatus_draft = \"draft\";\n    const trialStatus_review = \"review\";\n    const trialStatus_confirmed = \"confirmed\";\n    const trialStatus_rejected = \"rejected\";\n    const trialStatus_closed = \"closed\";\n  \n    const descFields = [\n        \"dateTime\",\n        \"areaObject\",\n        \"info\",\n        \"members\"\n    ];\n    const createFields = [\n        \"numberObject\",\n        \"dateTime\",\n        \"areaObject\",\n        \"info\",\n        \"members\",\n        \"checkStatus\",\n        \"requestObject\",\n        \"issueObject\",\n        \"inControlObject\"\n    ];\n  \n    const issueFields = [\"issueObject\"];\n  \n    const requestFields = [\"requestObject\"];\n\n    const processFields = [\"checkStatus\"];\n  \n    const inControlFields = [\"inControlObject\"];\n    \n    const options = { day: 'numeric', month: 'short', year: 'numeric', hour: \"numeric\", minute: \"numeric\" };\n    var dateTimeFormat = new Intl.DateTimeFormat('ru', options);\n  \n  const hideFields = (properties, excludeFields) => {\n    for (const fieldName in properties) {\n      properties[fieldName].hidden = excludeFields.every(\n        (field) => field !== fieldName\n      );\n    }\n  };\n  \n  const blockFields = (properties) => {\n    for (const objName in properties) {\n      for (const fieldName in properties[objName].properties){\n        properties[objName].properties[fieldName].readOnly = true\n      }\n    }\n  };\n  \n  if (formInstance.data && formInstance.data.selectTab === \"issue\") {\n    hideFields(formCopy.scheme.properties, issueFields);\n  }\n  \n  if (formInstance.data && formInstance.data.selectTab === \"request\") {\n    hideFields(formCopy.scheme.properties, requestFields);\n  }\n  \nformCopy.scheme.properties.members.required = [\"applicant\"]\n\n  if (formInstance.data && formInstance.data.selectTab === \"inControl\"){\n    hideFields(formCopy.scheme.properties, inControlFields);\n  }\n  \n  if (formInstance.data && formInstance.data.selectTab === \"description\") {\n    hideFields(formCopy.scheme.properties, descFields);\n    formCopy.scheme.properties.info.properties.testType.helperText = \"\"\n    formCopy.scheme.properties.info.properties.testType.readOnly = true\n    if (formInstance.data.info.testType === \"laboratory\") {\n        formCopy.scheme.properties.info.properties.comment.hidden = true\n        formCopy.scheme.properties.info.properties.laboratory.hidden = false\n        formCopy.scheme.properties.info.properties.typeOfLaboratory.hidden = false\n        formCopy.scheme.properties.info.properties.volume.hidden = false\n     }\n      else {\n        formCopy.scheme.properties.info.properties.comment.hidden = false\n        formCopy.scheme.properties.info.properties.laboratory.hidden = true\n        formCopy.scheme.properties.info.properties.typeOfLaboratory.hidden = true\n        formCopy.scheme.properties.info.properties.volume.hidden = true\n      }\n  }\n  \n  if (formInstance.data && formInstance.data.selectTab === \"process\") {\n    hideFields(formCopy.scheme.properties, processFields);\n     formCopy.scheme.properties.checkStatus.properties.executorStatus.hidden = false;\n     formCopy.scheme.properties.checkStatus.properties.trialResult.hidden = false;\n     formCopy.scheme.properties.checkStatus.properties.exitCheck.hidden = false;\n     delete formCopy.scheme.properties.checkStatus.properties.applicantStatus.default     \n       if (formInstance.data.checkStatus.executorStatus === \"notAccept\"){\n         formCopy.scheme.properties.checkStatus.properties.trialReason.hidden = false\n       } \n        else{\n         formCopy.scheme.properties.checkStatus.properties.trialReason.hidden = true\n         }\n       };\n      \n   if (isCreation) {\n     formCopy.scheme.properties.selectTab.hidden = true; \n     hideFields(formCopy.scheme.properties, [...createFields]);\n     formCopy.scheme.properties.checkStatus.properties.executorStatus.hidden = true;\n     formCopy.scheme.properties.checkStatus.properties.trialResult.hidden = true;\n     formCopy.scheme.properties.checkStatus.properties.trialReason.hidden = true;\n     formCopy.scheme.properties.checkStatus.properties.exitCheck.hidden = true;\n     formCopy.scheme.properties.issueObject.properties.issue.readOnly = false;\n     formCopy.scheme.properties.requestObject.properties.request.readOnly = false;\n    formCopy.scheme.properties.numberObject.required = [\"number\"]\n     formCopy.scheme.properties.inControlObject.properties.inControl.readOnly = false;\n     if (Object.keys(formInstance.data).length != 0 && formInstance.data.info.testType && formInstance.data.info.testType === \"laboratory\" ) {\n        formCopy.scheme.properties.info.properties.comment.hidden = true\n        formCopy.scheme.properties.info.properties.laboratory.hidden = false\n        formCopy.scheme.properties.info.properties.typeOfLaboratory.hidden = false\n        formCopy.scheme.properties.info.properties.volume.hidden = false\n     }\n      else if (Object.keys(formInstance.data).length != 0 && formInstance.data.info.testType && formInstance.data.info.testType === \"geodetic\"){\n        formCopy.scheme.properties.info.properties.comment.hidden = false\n        formCopy.scheme.properties.info.properties.laboratory.hidden = true\n        formCopy.scheme.properties.info.properties.typeOfLaboratory.hidden = true\n        formCopy.scheme.properties.info.properties.volume.hidden = true\n      }\n   } else {\n     formCopy.scheme.properties.selectTab.hidden = false;\n     formCopy.scheme.properties.selectTab.default = \"description\";\n     formCopy.scheme.properties.numberObject.required = []\n   }\n \n  if (Object.keys(formInstance.data).length != 0 && formInstance.data.issueStatus && formInstance.data.issueStatus.length != 0 && formInstance.data.issueStatus.includes(trialStatus_review)){\n    if (formInstance.data.checkStatus.executorStatus === \"notAccept\"){\n      formCopy.scheme.properties.checkStatus.required = [\"trialReason\"]  \n    }\n    else{\n      formCopy.scheme.properties.checkStatus.required = []  \n    }\n  } \n  \n    if (formInstance.data.issueStatus && formInstance.data.issueStatus.length != 0 && (formInstance.data.issueStatus.includes(trialStatus_draft) || formInstance.data.issueStatus.includes(trialStatus_rejected))){\n      \n      blockFields(formCopy.scheme.properties);\n      \n      if (user_ID.includes(item.data.applicantCheck)){\n        formCopy.scheme.properties.checkStatus.properties.applicantStatus.readOnly = false;\n        formCopy.scheme.properties.dateTime.properties.dateTimeStart.readOnly = false;\n        formCopy.scheme.properties.dateTime.properties.dateTimeEnd.readOnly = false;\n        formCopy.scheme.properties.areaObject.properties.area.readOnly = false;\n        formCopy.scheme.properties.info.properties.laboratory.readOnly = false;\n        formCopy.scheme.properties.info.properties.typeOfLaboratory.readOnly = false;\n        formCopy.scheme.properties.info.properties.comment.readOnly = false;\n        formCopy.scheme.properties.info.properties.cafm.readOnly = false;\n        formCopy.scheme.properties.info.properties.volume.readOnly = false;\n        formCopy.scheme.properties.members.properties.applicant.readOnly = false;\n        formCopy.scheme.properties.members.properties.executor.readOnly = false;\n        formCopy.scheme.properties.issueObject.properties.issue.readOnly = false;\n        formCopy.scheme.properties.requestObject.properties.request.readOnly = false;\n        formCopy.scheme.properties.inControlObject.properties.inControl.readOnly = false;\n      }\n      \n      if (user_ID.includes(item.data.executorCheck) && formInstance.data.issueStatus.includes(trialStatus_rejected)){\n        formCopy.scheme.properties.members.properties.executor.readOnly = false;\n        formCopy.scheme.properties.checkStatus.properties.executorStatus.readOnly = false;\n        formCopy.scheme.properties.checkStatus.properties.trialReason.readOnly = false;\n      }\n    }\n  \n    if (formInstance.data.issueStatus && formInstance.data.issueStatus.length != 0 && formInstance.data.issueStatus.includes(trialStatus_review)){\n      \n      blockFields(formCopy.scheme.properties);\n      \n      if (user_ID.includes(item.data.executorCheck)){\n        formCopy.scheme.properties.members.properties.executor.readOnly = false;\n        formCopy.scheme.properties.checkStatus.properties.executorStatus.readOnly = false;\n        formCopy.scheme.properties.checkStatus.properties.trialReason.readOnly = false;\n      }\n    }\n  \n    if (formInstance.data.issueStatus && formInstance.data.issueStatus.length != 0 && formInstance.data.issueStatus.includes(trialStatus_confirmed)){\n      \n      blockFields(formCopy.scheme.properties);\n      \n      if (user_ID.includes(item.data.applicantCheck)){\n        formCopy.scheme.properties.checkStatus.properties.applicantStatus.readOnly = false;\n        formCopy.scheme.properties.members.properties.applicant.readOnly = false;\n        formCopy.scheme.properties.issueObject.properties.issue.readOnly = false;\n        formCopy.scheme.properties.requestObject.properties.request.readOnly = false;\n        formCopy.scheme.properties.inControlObject.properties.inControl.readOnly = false;\n      }\n      \n      if (user_ID.includes(item.data.executorCheck)){\n        formCopy.scheme.properties.members.properties.executor.readOnly = false;\n        formCopy.scheme.properties.checkStatus.properties.executorStatus.readOnly = false;\n        formCopy.scheme.properties.checkStatus.properties.trialReason.readOnly = false;\n        formCopy.scheme.properties.checkStatus.properties.trialResult.readOnly = false;\n        if (typeof(formInstance.data.checkStatus.trialResult) != \"undefined\"){\n           formCopy.scheme.properties.checkStatus.properties.exitCheck.readOnly = false;\n        } \n        else {\n           formCopy.scheme.properties.checkStatus.properties.exitCheck.readOnly = true;\n        }\n      }\n    }\n    \n    if (formInstance.data.issueStatus && formInstance.data.issueStatus.length != 0 && formInstance.data.issueStatus.includes(trialStatus_closed)){\n      \n      blockFields(formCopy.scheme.properties);\n      \n      if (user_ID.includes(item.data.applicantCheck)){\n        formCopy.scheme.properties.issueObject.properties.issue.readOnly = false;\n        formCopy.scheme.properties.requestObject.properties.request.readOnly = false;\n        formCopy.scheme.properties.inControlObject.properties.inControl.readOnly = false;\n      }\n      \n    }   \n\n if (Object.keys(formInstance.data).length != 0 ){\nif (formInstance.data.members && formInstance.data.members.applicant &&  formInstance.data.dateTime.dateTimeStart != 0 && formInstance.data.dateTime.dateTimeEnd != 0 && ((formInstance.data.info.testType === \"laboratory\" && formInstance.data.info.laboratory && formInstance.data.info.typeOfLaboratory) || (formInstance.data.info.testType === \"geodetic\" )) && formInstance.data.members.executor && formInstance.data.areaObject && formInstance.data.areaObject.area && user_ID.includes(item.data.members.applicant) &&(!(formInstance.data.issueStatus) || formInstance.data.issueStatus && !(formInstance.data.issueStatus.includes(trialStatus_closed)))){\n         formCopy.scheme.properties.checkStatus.properties.applicantStatus.readOnly = false\n         formCopy.scheme.properties.checkStatus.properties.applicantStatus.helperText = \"\"\n   }\n   else{\n         formCopy.scheme.properties.checkStatus.properties.applicantStatus.readOnly = true\n         formCopy.scheme.properties.checkStatus.properties.applicantStatus.helperText = \"Чтобы ваше испытание отправилась на рассмотрение, измените статус на «Готов к испытанию». Для этого нужно заполнить все обязательные поля. Если вы пока не можете это сделать, сохраните испытание в статусе «Не готов к испытанию» и завершите заполнение позже.\"\n   }\n} \n\n  if (Object.keys(formInstance.data).length != 0 ){\nif (formInstance.data.members && formInstance.data.members.applicant &&  formInstance.data.dateTime.dateTimeStart != 0 && formInstance.data.dateTime.dateTimeEnd != 0 && ((formInstance.data.info.testType === \"laboratory\" && formInstance.data.info.laboratory && formInstance.data.info.typeOfLaboratory) || (formInstance.data.info.testType === \"geodetic\" )) && formInstance.data.members.executor && formInstance.data.areaObject && formInstance.data.areaObject.area && user_ID.includes(item.data.members.executor) &&(!(formInstance.data.issueStatus) || formInstance.data.issueStatus && !(formInstance.data.issueStatus.includes(trialStatus_closed)))){\n        formCopy.scheme.properties.checkStatus.properties.executorStatus.readOnly = false\n         formCopy.scheme.properties.checkStatus.properties.trialReason.readOnly = false\n   }\n   else{\n         formCopy.scheme.properties.checkStatus.properties.executorStatus.readOnly = true\n         formCopy.scheme.properties.checkStatus.properties.trialReason.readOnly = true\n   }\n} \n  \n   console.log(formInstance);\n  return formCopy;\n}\n",
	"form": "6260fd3f98497201a500000f",
	"relationsData": [],
	"createdDate": 1652445145262,
	"updatedDate": 1661242866712,
	"owner": null,
	"assignedTo": null,
	"parent": null
}